"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const { expect } = require("chai");
const sort_param_serializer_1 = require("../../src/serialization/sort-param-serializer");
const parser = require("../../src/parsing/parser");
const legalSortsToSerialization = {
    "fieldA,(ax,:x,x)": true,
    "fieldA,(:ax,[])": true,
    "fieldA,-fieldB": true,
    "nullified": true,
    "truthy": true,
    "fieldA,(x,:y,z)": true,
    "(x,:y,z),fieldA": true,
    "fieldA,-(x,:y,z)": true,
    "-(x,:y,z),fieldA": true,
    "-(a,4)": true,
    "test": true,
    "test,-test,(1,:eq,1),-(1,1)": "test,-test,(1,1),-(1,1)",
    "%C2%A9": true,
    "%2D": true,
    "%39": true,
    "%2e": "%2E"
};
describe("Sort Serialization", () => {
    it("should be the inverse of parsing", () => {
        Object.keys(legalSortsToSerialization).forEach(k => {
            const v = legalSortsToSerialization[k];
            const expected = v === true ? k : v;
            expect(sort_param_serializer_1.default(parser.parse(k, { startRule: "Sort" }))).to.equal(expected);
        });
    });
});
