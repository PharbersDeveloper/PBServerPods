HTML =>
	块级元素 5 ~ 6
	行级元素 3 ~ 4
	空元素 2 ~ 3
	HTML5引入了哪些新的标签，简单列举2~3个，并说明作用
	HTML5的文件离线储存怎么使用 => <html manifest='cache.manifest'>

CSS =>
	CSS选择器有哪些？哪些属性可以继承？=>
		可继承的属性：font-size, font-family, color

		不可继承的样式：border, padding, margin, width, height

		优先级（就近原则）：!important > [ id > class > tag ] 
		!important 比内联优先级高

	display有哪些值？说明他们的作用?

	position的值？=>
		static（默认）：按照正常文档流进行排列；
		relative（相对定位）：不脱离文档流，参考自身静态位置通过 top, bottom, left, right 定位；
		absolute(绝对定位)：参考距其最近一个不为static的父级元素通过top, bottom, left, right 定位；
		fixed(固定定位)：所固定的参照对像是可视窗口

	display:none与visibility：hidden的区别？=>
		display：none 不显示对应的元素，在文档布局中不再分配空间（回流+重绘）
		visibility：hidden 隐藏对应元素，在文档布局中仍保留原来的空间（重绘）

	position跟display、overflow、float这些特性相互叠加后会怎么样？ =>
		display属性规定元素应该生成的框的类型；position属性规定元素的定位类型；float属性是一种布局方式，定义元素在哪个方向浮动。
		类似于优先级机制：position：absolute/fixed优先级最高，有他们在时，float不起作用，display值需要调整。float 或者absolute定位的元素，只能是块元素或表格。

	使用 CSS 预处理器吗？

	::before 和 :after中双冒号和单冒号有什么区别？解释一下这2个伪元素的作用 =>
		单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。
		::before就是以一个子元素的存在，定义在元素主体内容之前的一个伪元素。并不存在于dom之中，只存在在页面之中。

JavaScript =>
	Function的参数传递是值传递还是址传递

	介绍JavaScript的基本数据类型 =>
		Number、String 、Boolean 、Null、Undefined 
		Object 是 JavaScript 中所有对象的父对象
		数据封装类对象：Object、Array、Boolean、Number 和 String
		其他对象：Function、Arguments、Math、Date、RegExp、Error
		新类型：Symbol

	栈和堆的区别？=>
		栈（stack）：由编译器自动分配释放，存放函数的参数值，局部变量等；
		堆（heap）：一般由程序员分配释放，若程序员不释放，程序结束时可能由操作系统释放。

	Javascript实现继承的几种方式 =>
		借用构造函数法（又叫经典继承）
		对象冒充
		组合继承（最常用）

	什么是window对象? 什么是document对象? =>
		window对象代表浏览器中打开的一个窗口。document对象代表整个html文档。实际上，document对象是window对象的一个属性。

	null，undefined的区别？=>
		null表示一个对象被定义了，但存放了空指针，转换为数值时为0。
		undefined表示声明的变量未初始化，转换为数值时为NAN。
		typeof(null) -- object;
		typeof(undefined) -- undefined

	如何判断一个对象是否属于某个类？=>
		使用instanceof 即if(a instanceof Person){alert('yes');}

	call和apply =>
		call（）方法和apply（）方法的作用相同，动态改变某个类的某个方法的运行环境。他们的区别在于接收参数的方式不同。在使用call（）方法时，传递给函数的参数必须逐个列举出来。使用apply（）时，传递给函数的是参数数组

	谈一谈你对ECMAScript6的了解?

	JS垃圾回收机制？=>
		1) 标记清除：
			这个算法把“对象是否不再需要”简化定义为“对象是否可以获得”。
			这个算法假定设置一个叫做根（root）的对象（在Javascript里，根是全局对象）。定期的，垃圾回收器将从根开始，找所有从根开始引用的对象，然后找这些对象引用的对象。从根开始，垃圾回收器将找到所有可以获得的对象和所有不能获得的对象。

		2) 引用计数：
			这是最简单的垃圾收集算法。此算法把“对象是否不再需要”简化定义为“对象有没有其他对象引用到它”。如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收。
			该算法有个限制：无法处理循环引用。两个对象被创建，并互相引用，形成了一个循环。它们被调用之后不会离开函数作用域，所以它们已经没有用了，可以被回收了。然而，引用计数算法考虑到它们互相都有至少一次引用，所以它们不会被回收。

ES6 =>
	讲一下var、let、const的区别
	rest参数是干什么的
	简单解释下什么是promise
	map和forEach的区别

TypeScript =>
	基本类型有哪些?=>
		Boolean
		Number
		String
		Array
		Enum
		Any
		Void
		
	void 和 undefined 有什么区别？

	什么是 never 类型？=>
		never用于函数返回值时，表示函数有抛出异常，没有正常执行到底。用于变量声明，无法为其赋予任何值！
		never是所有类型的子类型并且可以赋值给所有类型。没有类型是never的子类型或能赋值给never（never类型本身除外）
